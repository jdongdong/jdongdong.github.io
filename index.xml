<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人博客</title>
    <link>https://jdongdong.github.io/</link>
    <description>Recent content on 个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Apr 2018 17:45:14 +0800</lastBuildDate>
    
        <atom:link href="https://jdongdong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>git常用命令</title>
      <link>https://jdongdong.github.io/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 20 Apr 2018 17:45:14 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description> 新建git仓库 git init git remote add origin https://github.com/username/xxx.git git add -A git commit -m &amp;#34;注释内容&amp;#34; git push -u origin master 更新操作 git pull origin master</description>
    </item>
    
    
    
    <item>
      <title>First</title>
      <link>https://jdongdong.github.io/first/</link>
      <pubDate>Fri, 20 Apr 2018 16:46:37 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/first/</guid>
      <description> first test md </description>
    </item>
    
    
    
    
    
    <item>
      <title>小程序源码阅读（一）</title>
      <link>https://jdongdong.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%80/</link>
      <pubDate>Sat, 16 Dec 2017 16:30:04 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%80/</guid>
      <description> 小程序源码阅读（一） 项目介绍 github:[github.com/zce/weapp-demo](https://github.com/zce/weapp-demo) 收获 </description>
    </item>
    
    
    
    <item>
      <title>Vue</title>
      <link>https://jdongdong.github.io/vue/</link>
      <pubDate>Sat, 25 Nov 2017 22:57:58 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/vue/</guid>
      <description>强制刷新dom：$forceUpdate()</description>
    </item>
    
    
    
    <item>
      <title>Js</title>
      <link>https://jdongdong.github.io/js/</link>
      <pubDate>Sat, 25 Nov 2017 22:55:33 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/js/</guid>
      <description>数字验证 function checknum(obj) { return !isNaN(obj) } function checknum(obj) { return /^[0-9]*$/.test(obj) } 验证数字的正则表达式集 验证数字：^[0-9]$ 验证n位的数字：^\d{n}$ 验证至少n位数字：^\d{n,}$ 验证m-n位的数字：^\d{m,n}$ 验证零和非零开头的数字：^(0|[1-9][0-9])$ 验证有两位小数的正实数：^[0-9]+(.[0-9]{2})?$ 验证有1-3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$ 验证非零的正整数：^+?[1-9][0-9]$ 验证非零的负整数：^-[1-9][0-9]$ 验证非负整数（正整数 + 0） ^\d+$ 验证非正整数（负整数 + 0） ^((-\d+)|(0+))$ 验证长度为3的字符：^.{3}$ 验证由26个英文字母组成的字符串：^[A-Za-z]+$ 验证由26个大写英文字母组成的字符串：^[A-Z]+$ 验证由26个小写英文字母组成的字符串：^[a-z]+$ 验证由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ 验证由数字、26个英文字母或者下划线组成的字符串：^\w+$ 验证用户密码:^[a-zA-Z]\w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。 验证是否含有 ^%&amp;amp;’,;=?$\” 等字符：[^%&amp;amp;’,;=?$\x22]+ 验证汉字：^[\u4e00-\u9fa5],{0,}$ 验证Email地址：^\w+[-+.]\w+)@\w+([-.]\w+).\w+([-.]\w+)$ 验证InternetURL：^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;amp;=])?$ ；^[a-zA-z]+://(w+(-w+))(.(w+(-w+)))(?S)?$ 验证电话号码：^((\d{3,4})|\d{3,4}-)?\d{7,8}$：–正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。 验证身份证号（15位或18位数字）：^\d{15}|\d{}18$ 验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：“01”-“09”和“1”“12” 验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$ 正确格式为：01、09和1、31。 整数：^-?\d+$ 非负浮点数（正浮点数 + 0）：^\d+(.\d+)?$ 正浮点数 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$ 非正浮点数（负浮点数 + 0） ^((-\d+(.\d+)?)|(0+(.0+)?))$ 负浮点数 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$ 浮点数 ^(-?\d+)(.\d+)?$ </description>
    </item>
    
    
    
    <item>
      <title>Csharp</title>
      <link>https://jdongdong.github.io/csharp/</link>
      <pubDate>Sat, 25 Nov 2017 22:55:29 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/csharp/</guid>
      <description>常用验证 using System.Text.RegularExpressions; /// &amp;lt;summary&amp;gt; /// 验证手机号 /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;#34;s&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static bool IsMobile(string s) { return Regex.IsMatch(s, @&amp;#34;^1[3578]\d{9}$&amp;#34;); } /// &amp;lt;summary&amp;gt; /// 验证邮箱 /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;#34;s&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static bool IsEmail(string s) { String strExp = @&amp;#34;\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*&amp;#34;; Regex r = new Regex(strExp); Match m = r.Match(s); return m.Success; } /// &amp;lt;summary&amp;gt; /// 验证电话号码 /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;#34;s&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static bool IsTelphone(string s) { return Regex.</description>
    </item>
    
    
    
    <item>
      <title>Go</title>
      <link>https://jdongdong.github.io/go/</link>
      <pubDate>Sat, 25 Nov 2017 22:55:18 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/go/</guid>
      <description>设置过期标记 // Deprecated: 描述性文字 func DeprecatedFunc() { }</description>
    </item>
    
    
    
    <item>
      <title>Linux</title>
      <link>https://jdongdong.github.io/linux/</link>
      <pubDate>Sat, 25 Nov 2017 21:44:38 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/linux/</guid>
      <description> Linux权限 // 为所有者、所属组和其他用户添加执行的权限 chmod +x 文件路径 // 为所有者、所属组和其他用户删除执行的权限 chmod -x 文件路径 // 为所有者添加执行的权限 chmod u+x 文件路径 // 为所属组添加执行的权限 chmod g+x 文件路径 // 为其他用户添加执行的权限 chmod o+x 文件路径 // 为所有者、所属组添加执行的权限 chmod ug+x 文件路径 // 为所有者、所属组和其他用户添加写、执行的权限，取消读权限 chmod =wx 文件路径 // 为所有者、所属组添加写、执行的权限，取消读权限 chmod ug=wx 文件路径 常用命令 文件解压到指定目录：tar -zxvf xxx.tar.gz -C /tmp/ 查找进程：ps -ef|grep XXX 内存使用查看：free -m 程序内存占用：ps -aux | sort -k4nr | head 5 查看程序端口占用：netstat -nap | grep pid df -lh</description>
    </item>
    
    
    
    <item>
      <title>Svn</title>
      <link>https://jdongdong.github.io/svn/</link>
      <pubDate>Sat, 25 Nov 2017 17:15:02 +0800</pubDate>
      
      <guid>https://jdongdong.github.io/svn/</guid>
      <description>参考链接 https://www.if-not-true-then-false.com/2012/svn-subversion-backup-and-restore/
安装配置 1.yum install subversion 2.查看版本svnserve –-version 3.创建SVN版本库目录 mkdir -p /var/svn/svnrepos 4.创建版本库 svnadmin create /var/svn/svnrepos 5.进入conf目录（该svn版本库配置文件）cd conf/ authz文件是权限控制文件 passwd是帐号密码文件 svnserve.conf SVN服务配置文件 6.设置帐号密码 vi passwd 在[users]块中添加用户和密码，格式：帐号=密码，如quwenzhe=123456 7.设置权限 vi authz 在末尾添加如下代码： [html] view plaincopy [/] quwenzhe=rw 意思是版本库的根目录quwenzhe对其有读写权限 8.修改svnserve.conf文件 vi svnserve.conf 打开下面的几个注释： anon-access = read #匿名用户可读 auth-access = write #授权用户可写 password-db = passwd #使用哪个文件作为账号文件 authz-db = authz #使用哪个文件作为权限文件 realm = /var/svn/svnrepos # 认证空间名，版本库所在目录 9.启动svn版本库 svnserve -d -r /var/svn/svnrepos（停止SVN命令 killall svnserve） 10.svn地址：svn://xxx.xxx.xxx.xxx/svnrepos 开机自启 在/usr/lib/systemd/system/添加svnserve.</description>
    </item>
    
    
  </channel>
</rss>
